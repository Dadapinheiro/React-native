{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Task from \"./components/Task\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      task = _useState2[0],\n      setTask = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      taskItems = _useState4[0],\n      setTaskItems = _useState4[1];\n\n  var handleAddTask = function handleAddTask() {\n    Keyboard.dismiss();\n    setTaskItems([].concat(_toConsumableArray(taskItems), [task]));\n    setTask(\"\");\n  };\n\n  var completeTask = function completeTask(index) {\n    var itemsCopy = _toConsumableArray(taskItems);\n\n    itemsCopy.splice(index, 1);\n    setTaskItems(itemsCopy);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(ScrollView, {\n      contentContainerStyle: {\n        flexGrow: 1\n      },\n      keyboardShouldPersistTaps: \"handled\",\n      children: _jsxs(View, {\n        style: styles.tasksWrapper,\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"TAREFAS DI\\xC1RIAS\"\n        }), _jsx(View, {\n          style: styles.items,\n          children: taskItems.map(function (item, index) {\n            return _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return completeTask(index);\n              },\n              children: _jsx(Task, {\n                text: item\n              })\n            }, index);\n          })\n        })]\n      })\n    }), _jsxs(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n      style: styles.writeTaskWrapper,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Adicionar tarefas\",\n        value: task,\n        onChangeText: function onChangeText(text) {\n          return setTask(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return handleAddTask();\n        },\n        children: _jsx(View, {\n          style: styles.addWrapper,\n          children: _jsx(Text, {\n            style: styles.addText,\n            children: \"Clique\"\n          })\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#8fbc8f\"\n  },\n  tasksWrapper: {\n    paddingTop: 80,\n    paddingHorizontal: 20\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: \"#bold\"\n  },\n  items: {\n    marginTop: 30\n  },\n  writeTaskWrapper: {\n    bottom: 60,\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\"\n  },\n  input: {\n    paddingVertical: 15,\n    paddingHorizontal: 15,\n    backgroundColor: \"#FFF\",\n    borderRadius: 60,\n    borderColor: \"#000000\",\n    borderWidth: 1,\n    width: 250\n  },\n  addWrapper: {\n    width: 60,\n    height: 60,\n    backgroundColor: \"#ffa500\",\n    borderRadius: 60,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderColor: \"#C0C0C0\",\n    borderWidth: 1\n  },\n  addText: {}\n});","map":{"version":3,"names":["useState","Task","App","task","setTask","taskItems","setTaskItems","handleAddTask","Keyboard","dismiss","completeTask","index","itemsCopy","splice","styles","container","flexGrow","tasksWrapper","sectionTitle","items","map","item","Platform","OS","writeTaskWrapper","input","text","addWrapper","addText","StyleSheet","create","flex","backgroundColor","paddingTop","paddingHorizontal","fontSize","fontWeight","marginTop","bottom","width","flexDirection","justifyContent","alignItems","paddingVertical","borderRadius","borderColor","borderWidth","height"],"sources":["C:/Users/202002553741/Documents/React-native/App.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nimport {\r\n  KeyboardAvoidingView,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Keyboard,\r\n  ScrollView,\r\n  Platform,\r\n} from \"react-native\";\r\nimport Task from \"./components/Task\";\r\n\r\nexport default function App() {\r\n  const [task, setTask] = useState(\"\");\r\n  const [taskItems, setTaskItems] = useState([]);\r\n\r\n  const handleAddTask = () => {\r\n    Keyboard.dismiss();\r\n\r\n    setTaskItems([...taskItems, task]);\r\n\r\n    setTask(\"\");\r\n  };\r\n\r\n  const completeTask = (index) => {\r\n    let itemsCopy = [...taskItems];\r\n\r\n    itemsCopy.splice(index, 1);\r\n\r\n    setTaskItems(itemsCopy);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Added this scroll view to enable scrolling when list gets longer than the page */}\r\n      <ScrollView\r\n        contentContainerStyle={{\r\n          flexGrow: 1,\r\n        }}\r\n        keyboardShouldPersistTaps=\"handled\"\r\n      >\r\n        {/* Today's Tasks */}\r\n        <View style={styles.tasksWrapper}>\r\n          <Text style={styles.sectionTitle}>TAREFAS DI√ÅRIAS</Text>\r\n          <View style={styles.items}>\r\n            {/* This is where the tasks will go! */}\r\n            {taskItems.map((item, index) => {\r\n              return (\r\n                <TouchableOpacity\r\n                  key={index}\r\n                  onPress={() => completeTask(index)}\r\n                >\r\n                  <Task text={item} />\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n\r\n      {/* Write a task */}\r\n      {/* Uses a keyboard avoiding view which ensures the keyboard does not cover the items on screen */}\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n        style={styles.writeTaskWrapper}\r\n      >\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder={\"Adicionar tarefas\"}\r\n          value={task}\r\n          onChangeText={(text) => setTask(text)}\r\n        />\r\n        <TouchableOpacity onPress={() => handleAddTask()}>\r\n          <View style={styles.addWrapper}>\r\n            <Text style={styles.addText}>Clique</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n      </KeyboardAvoidingView>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#8fbc8f\",\r\n  },\r\n  tasksWrapper: {\r\n    paddingTop: 80,\r\n    paddingHorizontal: 20,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 24,\r\n    fontWeight: \"#bold\",\r\n  },\r\n  items: {\r\n    marginTop: 30,\r\n  },\r\n  writeTaskWrapper: {\r\n    bottom: 60,\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n  },\r\n  input: {\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n    backgroundColor: \"#FFF\",\r\n    borderRadius: 60,\r\n    borderColor: \"#000000\",\r\n    borderWidth: 1,\r\n    width: 250,\r\n  },\r\n  addWrapper: {\r\n    width: 60,\r\n    height: 60,\r\n    backgroundColor: \"#ffa500\",\r\n    borderRadius: 60,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderColor: \"#C0C0C0\",\r\n    borderWidth: 1,\r\n  },\r\n  addText: {},\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}