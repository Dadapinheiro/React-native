{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useEffect, useState } from \"react\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Task from \"./components/Task\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      task = _useState2[0],\n      setTask = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      taskItems = _useState4[0],\n      setTaskItems = _useState4[1];\n\n  var handleAddTask = function handleAddTask() {\n    Keyboard.dismiss();\n    AsyncStorage.setItem('@tasks', JSON.stringify([].concat(_toConsumableArray(taskItems), [task])));\n    setTaskItems([].concat(_toConsumableArray(taskItems), [task]));\n    setTask(\"\");\n  };\n\n  var completeTask = function completeTask(index) {\n    var oldTasks, newTasks;\n    return _regeneratorRuntime.async(function completeTask$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(handleTasks());\n\n          case 2:\n            oldTasks = _context.sent;\n            newTasks = oldTasks.filter(function (_, position) {\n              return position !== index;\n            });\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@tasks', JSON.stringify(newTasks)));\n\n          case 6:\n            setTaskItems(newTasks);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleTasks = function handleTasks() {\n    var result, parsedResult;\n    return _regeneratorRuntime.async(function handleTasks$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@tasks'));\n\n          case 2:\n            result = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(JSON.parse(result));\n\n          case 5:\n            parsedResult = _context2.sent;\n\n            if (!(parsedResult === null || parsedResult === undefined)) {\n              _context2.next = 8;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", []);\n\n          case 8:\n            return _context2.abrupt(\"return\", parsedResult);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    handleTasks().then(function (tasks) {\n      return setTaskItems(tasks);\n    });\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(ScrollView, {\n      contentContainerStyle: {\n        flexGrow: 1\n      },\n      keyboardShouldPersistTaps: \"handled\",\n      children: _jsxs(View, {\n        style: styles.tasksWrapper,\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"TAREFAS DI\\xC1RIAS\"\n        }), _jsx(View, {\n          style: styles.items,\n          children: (taskItems == null ? void 0 : taskItems.length) > 0 && (taskItems == null ? void 0 : taskItems.map(function (item, index) {\n            return _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return completeTask(index);\n              },\n              children: _jsx(Task, {\n                text: item\n              })\n            }, index);\n          }))\n        })]\n      })\n    }), _jsxs(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n      style: styles.writeTaskWrapper,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Adicionar tarefas\",\n        value: task,\n        onChangeText: function onChangeText(text) {\n          return setTask(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return handleAddTask();\n        },\n        children: _jsx(View, {\n          style: styles.addWrapper,\n          children: _jsx(Text, {\n            style: styles.addText,\n            children: \"Clique\"\n          })\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#8fbc8f\"\n  },\n  tasksWrapper: {\n    paddingTop: 80,\n    paddingHorizontal: 20\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: \"bold\"\n  },\n  items: {\n    marginTop: 30\n  },\n  writeTaskWrapper: {\n    bottom: 60,\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\"\n  },\n  input: {\n    paddingVertical: 15,\n    paddingHorizontal: 15,\n    backgroundColor: \"#FFF\",\n    borderRadius: 60,\n    borderColor: \"#000000\",\n    borderWidth: 1,\n    width: 250\n  },\n  addWrapper: {\n    width: 60,\n    height: 60,\n    backgroundColor: \"#ffa500\",\n    borderRadius: 60,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderColor: \"#C0C0C0\",\n    borderWidth: 1\n  },\n  addText: {}\n});","map":{"version":3,"names":["useEffect","useState","AsyncStorage","Task","App","task","setTask","taskItems","setTaskItems","handleAddTask","Keyboard","dismiss","setItem","JSON","stringify","completeTask","index","handleTasks","oldTasks","newTasks","filter","_","position","getItem","result","parse","parsedResult","undefined","then","tasks","styles","container","flexGrow","tasksWrapper","sectionTitle","items","length","map","item","Platform","OS","writeTaskWrapper","input","text","addWrapper","addText","StyleSheet","create","flex","backgroundColor","paddingTop","paddingHorizontal","fontSize","fontWeight","marginTop","bottom","width","flexDirection","justifyContent","alignItems","paddingVertical","borderRadius","borderColor","borderWidth","height"],"sources":["/home/luanmateus/Dev/tasks-pinheiro/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport {\n  KeyboardAvoidingView,\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  TouchableOpacity,\n  Keyboard,\n  ScrollView,\n  Platform,\n} from \"react-native\";\nimport Task from \"./components/Task\";\n\nexport default function App() {\n  const [task, setTask] = useState(\"\");\n  const [taskItems, setTaskItems] = useState([]);\n\n  const handleAddTask = () => {\n    Keyboard.dismiss();\n\n    AsyncStorage.setItem('@tasks', JSON.stringify([...taskItems, task]));\n\n    setTaskItems([...taskItems, task]);\n    setTask(\"\");\n  };\n\n  const completeTask = async (index) => {\n    let oldTasks = await handleTasks();\n\n    const newTasks = oldTasks.filter((_, position) => {\n      return position !== index;\n    })\n    \n    await AsyncStorage.setItem('@tasks', JSON.stringify(newTasks));\n    setTaskItems(newTasks)\n  };\n\n  const handleTasks = async () => {\n    const result = await AsyncStorage.getItem('@tasks');\n\n    const parsedResult = await JSON.parse(result);\n\n    if (parsedResult === null || parsedResult === undefined) return []\n\n    return parsedResult;\n  }\n\n  useEffect(() => {\n    handleTasks().then(tasks => setTaskItems(tasks));\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      {/* Added this scroll view to enable scrolling when list gets longer than the page */}\n      <ScrollView\n        contentContainerStyle={{\n          flexGrow: 1,\n        }}\n        keyboardShouldPersistTaps=\"handled\"\n      >\n        {/* Today's Tasks */}\n        <View style={styles.tasksWrapper}>\n          <Text style={styles.sectionTitle}>TAREFAS DI√ÅRIAS</Text>\n          <View style={styles.items}>\n            {/* This is where the tasks will go! */}\n            {taskItems?.length > 0 && taskItems?.map((item, index) => {\n              return (\n                <TouchableOpacity\n                  key={index}\n                  onPress={() => completeTask(index)}\n                >\n                  <Task text={item} />\n                </TouchableOpacity>\n              );\n            })}\n          </View>\n        </View>\n      </ScrollView>\n\n      {/* Write a task */}\n      {/* Uses a keyboard avoiding view which ensures the keyboard does not cover the items on screen */}\n      <KeyboardAvoidingView\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        style={styles.writeTaskWrapper}\n      >\n        <TextInput\n          style={styles.input}\n          placeholder={\"Adicionar tarefas\"}\n          value={task}\n          onChangeText={(text) => setTask(text)}\n        />\n        <TouchableOpacity onPress={() => handleAddTask()}>\n          <View style={styles.addWrapper}>\n            <Text style={styles.addText}>Clique</Text>\n          </View>\n        </TouchableOpacity>\n      </KeyboardAvoidingView>\n    </View>\n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#8fbc8f\",\n  },\n  tasksWrapper: {\n    paddingTop: 80,\n    paddingHorizontal: 20,\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n\n  },\n  items: {\n    marginTop: 30,\n  },\n  writeTaskWrapper: {\n    bottom: 60,\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n  },\n  input: {\n    paddingVertical: 15,\n    paddingHorizontal: 15,\n    backgroundColor: \"#FFF\",\n    borderRadius: 60,\n    borderColor: \"#000000\",\n    borderWidth: 1,\n    width: 250,\n  },\n  addWrapper: {\n    width: 60,\n    height: 60,\n    backgroundColor: \"#ffa500\",\n    borderRadius: 60,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderColor: \"#C0C0C0\",\n    borderWidth: 1,\n  },\n  addText: {},\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}